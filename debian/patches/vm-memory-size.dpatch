#! /bin/sh -e

. $(dirname $0)/DPATCH

@DPATCH@
diff -urN zabbix-1.4.2/src/libs/zbxsysinfo/linux/memory.c zabbix-1.4.2.debian/src/libs/zbxsysinfo/linux/memory.c
--- zabbix-1.4.2/src/libs/zbxsysinfo/linux/memory.c	2007-08-20 21:22:23.000000000 +0200
+++ zabbix-1.4.2.debian/src/libs/zbxsysinfo/linux/memory.c	2007-09-05 20:27:34.000000000 +0200
@@ -21,17 +21,13 @@
 
 #include "sysinfo.h"
 
-static int	VM_MEMORY_CACHED(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
-{
-	FILE	*f;
-	char	*t;
-	char	c[MAX_STRING_LEN];
-	zbx_uint64_t	res = 0;
-
-	assert(result);
+zbx_uint64_t   vm_cached_internal(void)
+ {
+    FILE    *f;
+    char    *t;
+    char    c[MAX_STRING_LEN];
+    zbx_uint64_t    res = 0;
 
-        init_result(result);
-		
 	if(NULL == (f = fopen("/proc/meminfo","r") ))
 	{
 		return	SYSINFO_RET_FAIL;
@@ -54,8 +50,21 @@
 		}
 	}
 	zbx_fclose(f);
+	return res;
+}
+
+static int	VM_MEMORY_CACHED(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
+{
+	FILE	*f;
+	char	*t;
+	char	c[MAX_STRING_LEN];
+	zbx_uint64_t	res = 0;
+
+	assert(result);
 
-	SET_UI64_RESULT(result, res);
+        init_result(result);
+		
+	SET_UI64_RESULT(result, vm_cached_internal());
 	return SYSINFO_RET_OK;
 }
 
@@ -151,6 +160,29 @@
 	}
 }
 
+static int VM_MEMORY_AVAILABLE(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
+{
+   struct sysinfo info;
+
+   assert(result);
+
+        init_result(result);
+
+   if( 0 == sysinfo(&info))
+   {
+#ifdef HAVE_SYSINFO_MEM_UNIT
+       SET_UI64_RESULT(result, ((zbx_uint64_t)(info.freeram + info.bufferram) * (zbx_uint64_t)info.mem_unit) + vm_cached_internal());
+#else
+       SET_UI64_RESULT(result, (info.freeram + info.sharedram + vm_cached_internal()));
+#endif
+       return SYSINFO_RET_OK;
+   }
+   else
+   {
+       return SYSINFO_RET_FAIL;
+   }
+}
+
 int     VM_MEMORY_SIZE(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
 {
 #define MEM_FNCLIST struct mem_fnclist_s
@@ -167,6 +199,7 @@
 		{"total",	VM_MEMORY_TOTAL},
 		{"buffers",	VM_MEMORY_BUFFERS},
 		{"cached",	VM_MEMORY_CACHED},
+		{"available",	VM_MEMORY_AVAILABLE},
 		{0,	0}
 	};
         char    mode[MAX_STRING_LEN];
